<!doctype html>
<html lang="en">

<head>
    <link rel="stylesheet" href="style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Comfortaa:wght@300..700&display=swap" rel="stylesheet">



    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Live Weather</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>

<body>
    <div class="searchbar">
        <div class="searchbarParentDiv">
            <input type="text" class="inputfield" placeholder="Search City">
            <img src="search.png" alt="" width="35px" class="searchicon" onclick="fetchData()">
        </div>
    </div>




    <div class="maincontentParentDiv d-flex">
        <div class="leftdiv">
            <div class="currenttempdiv leftchild p-3 d-flex flex-column gap-2">
                <h6 class="m-0" id="cityname">City Name</h6>
                <h5 class="m-0"><span id="citytemp">-</span> &deg;C</h5>
                <h6 class="m-0" id="skydec">Sky Description</h6>
                <hr class="line">
                <div class="d-flex gap-2">
                    <img src="./calendar_17526570.png" alt="" width="25px">
                    <h6 class="m-0" id="date">Date</h6>
                </div>
                <div class="d-flex gap-2">
                    <img src="clock_2997997.png" alt="" width="25px">
                    <h6 id="time">Time</h6>
                </div>
            </div>
            <div class="nextfivedays leftchild p-3 d-flex flex-column gap-2">
                <h6 class="m-0" id="comingFiveDaysTitle">Coming 5 Days</h6>
                <div id="forecastContainer" class="d-flex flex-column gap-1"></div>
            </div>
        </div>



        <div class="rightdiv">
            <div class="rightrow row1 d-flex gap-2 justify-content-between align-items-center">
                <div class="extrametric d-flex gap-3">
                    <img src="./realcode/flood.png" alt="" width="35px">
                    <div>
                        <h6 class="m-0">Humidity</h6>
                        <h6 class="m-0" id="humidity">-</h6>
                    </div>
                </div>
                <div class="extrametric d-flex gap-3">
                    <img src="./realcode/wind (1).png" alt="" width="35px">
                    <div>
                        <h6 class="m-0">Pressure</h6>
                        <h6 class="m-0" id="pressure">-</h6>
                    </div>
                </div>
                <div class="extrametric d-flex gap-3">
                    <img src="./realcode/hot.png" alt="" width="35px">
                    <div>
                        <h6 class="m-0">Feels Like</h6>
                        <h6 class="m-0" id="feelsLike">-</h6>
                    </div>
                </div>
                <div class="extrametric d-flex gap-3">
                    <img src="./realcode/eye.png" alt="" width="35px">
                    <div>
                        <h6 class="m-0">Visibility</h6>
                        <h6 class="m-0" id="visibility">-</h6>
                    </div>
                </div>
            </div>


            <div class="rightrow row2 d-flex justify-content-between align-items-center">
                <div class="aqi row2div p-3 d-flex flex-column gap-2">
                    <h5>Air Quality Index (AQI)</h5>
                    <div class="d-flex align-items-center justify-content-between">
                        <img src="air.png" alt="" width="40px">
                        <div class="text-center">
                            <h6 id="co">CO</h6>
                            <h6 id="covalue">-</h6>

                        </div>
                        <div class="text-center">
                            <h6 id="so2">SO2</h6>
                            <h6 id="so2value">-</h6>

                        </div>
                        <div class="text-center">
                            <h6 id="o3">O3</h6>
                            <h6 id="o3value">-</h6>

                        </div>
                        <div class="text-center">
                            <h6 id="no2">NO2</h6>
                            <h6 id="no2value">-</h6>

                        </div>
                    </div>
                </div>

                <div class="sunrise row2div p-3 gap-2">
                    <h5 class="m-0">Sunrise & Sunset</h5>
                    <div class="d-flex justify-content-between">
                        <div class="sunrisediv d-flex gap-2 align-items-center">
                            <img src="sun.png" alt="" width="75px">
                            <div class="d-flex flex-column gap-1">
                                <h6 class="m-0">Sunrise</h6>
                                <h5 class="m-0" id="sunrisetime">-:-- Am</h5>
                            </div>
                        </div>

                        <div class="sunsetdiv d-flex align-items-center gap-2">
                            <img src="moon.png" alt="" width="65px">
                            <div class="d-flex flex-column gap-2">
                                <h6 class="m-0">Sunset</h6>
                                <h5 class="m-0" id="sunsettime">-:-- Pm</h5>

                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="rightrow row3 d-flex flex-column gap-2">
                <h5 class="m-0">Today</h5>
                <div class="d-flex justify-content-between todayTempParentDiv" id="todayTempContainer">

                </div>
            </div>

        </div>
    </div>





    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
        integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
        integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
        crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.js"
        integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
    <script>
        function dateformat(timestamp) {
            const date = new Date(timestamp * 1000);
            return date.toLocaleString();
        }

        async function fetchaqidata(lat, lon) {

            let fetchaqidata = await fetch(`https://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=0d7576365f1fcbf6bcfefec2a203f927`)
            let formatteddata = await fetchaqidata.json();
            console.log("aqi data:", formatteddata);
            let list = formatteddata.list[0].components;
            console.log("line 242:", list);
            $("#no2")[0].innerText = 'NO2'
            $("#no2value")[0].innerText = list.no2

            $("#o3")[0].innerText = 'O3'
            $("#o3value")[0].innerText = list.o3

            $("#so2")[0].innerText = 'SO2'
            $("#so2value")[0].innerText = list.so2

            $("#co")[0].innerText = 'CO'
            $("#covalue")[0].innerText = list.co

        }

        async function nextfivedays(lat, lon) {

            const apiUrl = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=0d7576365f1fcbf6bcfefec2a203f927&units=metric`;
            try {
                const response = await fetch(apiUrl);
                if (!response.ok) {
                    throw new Error("Failed to fetch weather data");
                }
                const data = await response.json();

                let dailyForecasts = {};

                // Extract unique daily data
                data.list.forEach(item => {
                    let date = item.dt_txt.split(" ")[0]; // Extract date only
                    if (!dailyForecasts[date]) {
                        dailyForecasts[date] = {
                            temp: item.main.temp.toFixed(1), // Round temperature
                            icon: item.weather[0].icon, // Weather icon
                            day: new Date(date).toLocaleDateString('en-US', { weekday: 'long' }) // Get day name
                        };
                    }
                });

                // Get first 5 unique days
                let forecastHtml = "";
                Object.keys(dailyForecasts).slice(0, 5).forEach(date => {
                    let forecast = dailyForecasts[date];
                    forecastHtml += `
            <div class="forecastRow d-flex align-items-center justify-content-between">
                <div class="d-flex gap-1 align-items-center">
                    <img src="./realcode/clouds.png" alt="" width="35px">
                    <h6 class="m-0">${forecast.temp} &deg;C</h6>
                </div>
                <h6 class="m-0">${forecast.day}</h6>
                <h6 class="m-0">${date}</h6>
            </div>
        `;
                });

                document.getElementById("forecastContainer").innerHTML = forecastHtml;

            } catch (error) {
                console.error(error);
                alert("Failed to retrieve weather data. Please check your API key.");
            }
        }

        async function todayTemps(lat, lon) {
            const apiUrl = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=0d7576365f1fcbf6bcfefec2a203f927&units=metric`;

            try {
                const response = await fetch(apiUrl);
                if (!response.ok) {
                    throw new Error("Failed to fetch weather data");
                }
                const data = await response.json();

                let todayDate = new Date().toISOString().split("T")[0]; // Get today's date (YYYY-MM-DD)
                let todayForecasts = data.list.filter(item => item.dt_txt.startsWith(todayDate)); // Get today's data

                // Select specific time intervals (e.g., every 3 hours from the API)
                let selectedHours = todayForecasts.slice(0, 6); // Get first 6 hourly forecasts

                let todayHtml = "";
                selectedHours.forEach(item => {
                    let time = new Date(item.dt_txt).toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit', hour12: true }); // Format time
                    let temp = item.main.temp.toFixed(1); // Round temperature
                    let icon = item.weather[0].icon; // Weather icon

                    todayHtml += `
                        <div class="todayTemps">
                            <h6 class="m-0">${time}</h6>
                            <img src="./thunder.png" alt="" width="35px">
                            <h5>${temp}&deg;C</h5>
                        </div>
                    `;
                });

                document.getElementById("todayTempContainer").innerHTML = todayHtml;

            } catch (error) {
                console.error(error);
                alert("Failed to retrieve weather data. Please check your API key.");
            }
        }

        async function fetchData() {
            let cityname = document.getElementsByClassName('inputfield')[0].value;
            let requestdata = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=0d7576365f1fcbf6bcfefec2a203f927&units=metric`)
            let formatteddata = await requestdata.json();
            console.log("Formatted Data:", formatteddata);
            let responsecityname = formatteddata.name
            let responsetemp = formatteddata.main.temp
            let skydesc = formatteddata.weather[0].description

            $('#cityname')[0].innerText = responsecityname;
            $('#citytemp')[0].innerText = responsetemp
            $('#skydec')[0].innerText = skydesc
            $('#humidity')[0].innerText = formatteddata.main.humidity
            $("#pressure")[0].innerText = formatteddata.main.pressure
            $("#feelsLike")[0].innerText = formatteddata.main.feels_like
            $("#visibility")[0].innerText = formatteddata.visibility



            let properdate = dateformat(formatteddata.dt);
            let date = properdate.split(',')[0]
            let time = properdate.split(',')[1]
            $("#date")[0].innerText = date;
            $("#time")[0].innerText = time;



            let sunrisetimestamp = formatteddata.sys.sunrise;
            let sunsettimestamp = formatteddata.sys.sunset;
            let propersunrisetime = dateformat(sunrisetimestamp).split(',')[1]
            let propersunsettime = dateformat(sunsettimestamp).split(',')[1];
            $("#sunrisetime")[0].innerText = propersunrisetime
            $("#sunsettime")[0].innerText = propersunsettime



            let lon = formatteddata.coord.lon;
            let lat = formatteddata.coord.lat;
            fetchaqidata(lat, lon)
            nextfivedays(lat, lon);
            todayTemps(lat, lon);
        }
    </script>
</body>

              </html>
